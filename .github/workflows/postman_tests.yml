name: API E2E Tests (Postman)

on:
  push:
    branches:
      - main
      - develop
    paths:
      - 'backend-django/**' # Make sure this matches your Django project root
      - 'backend-django/postman_tests/**'
  pull_request:
    branches:
      - main
      - develop
    paths:
      - 'backend-django/**'
      - 'backend-django/postman_tests/**'
  workflow_dispatch:

jobs:
  run-postman-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # --- Django Backend Setup and Start ---

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12' # Use '3.12' as per your uv output (CPython 3.12.11)

      - name: Install Python Dependencies (uv and project requirements)
        # We need to change the working directory to the backend-django folder
        # for uv commands to find pyproject.toml or for uv pip install -r to work correctly
        #
        # If your pyproject.toml is at backend-django/pyproject.toml:
        # working-directory: backend-django
        run: |
          pip install uv
          uv venv
          uv sync
        working-directory: ./backend-django # <--- CRITICAL CHANGE HERE

      - name: Run Django Migrations (if needed for tests)
        # This will also run from the backend-django working directory
        run: |
          uv run manage.py migrate
        working-directory: ./backend-django # <--- CRITICAL CHANGE HERE
        env:
          DJANGO_SETTINGS_MODULE: mysite.settings # e.g., myproject.settings

      - name: Start Django Backend Server in Background
        # This will also run from the backend-django working directory
        run: |
          uv run manage.py runserver 0.0.0.0:8000 &
        working-directory: ./backend-django # <--- CRITICAL CHANGE HERE

      # --- Newman (Node.js) Setup and Run ---

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install Newman and HTML Reporter
        run: |
          npm install -g newman
          npm install -g newman-reporter-htmlextra

      - name: Run Postman API Tests
        # The newman run command itself will be executed from the root of the repository
        # so the path to the collection JSON must be relative to the repository root.
        run: |
          newman run backend-django/postman_tests/Django_Polls_API.postman_collection.json \
            --reporters cli,htmlextra \
            --reporter-htmlextra-export newman-report.html

      - name: Upload Newman HTML Report
        uses: actions/upload-artifact@v4
        with:
          name: newman-html-report
          path: newman-report.html
          retention-days: 7

      - name: Stop Django Backend Server
        if: always()
        run: |
          pkill -f "python backend-django/manage.py runserver 0.0.0.0:8000" || true