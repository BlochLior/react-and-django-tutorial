# .github/workflows/postman_tests.yml
name: API E2E Tests (Postman)

on:
  push:
    branches:
      - main
      - develop
    paths:
      - 'backend-django/**'
      - '.github/workflows/postman_tests.yml' # Keep this for changes to the workflow itself
  pull_request:
    branches:
      - main
      - develop
    paths:
      - 'backend-django/**'
      - '.github/workflows/postman_tests.yml'
  workflow_dispatch:

jobs:
  run-postman-tests:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # --- Django Backend Setup and Start ---

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Python Dependencies (uv and project requirements)
        run: |
          pip install uv
          uv venv
          uv sync
        working-directory: ./backend-django
      - name: Wait for MySQL to be Ready (using custom script)
        run: |
          uv run scripts/wait_for_mysql.py
        working-directory: ./backend-django # Run from the backend-django directory
        env: # Pass necessary database credentials to your script
          DATABASE_NAME: ${{ secrets.MYSQL_DATABASE }}
          DATABASE_USER: ${{ secrets.MYSQL_USER }}
          DATABASE_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          DATABASE_HOST: mysql # Use the service name as hostname
          DATABASE_PORT: 3306
          # If your wait_for_mysql.py imports Django settings,
          # you might also need DJANGO_SETTINGS_MODULE and SECRET_KEY here
          DJANGO_SETTINGS_MODULE: mysite.settings
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
      - name: Run Django Migrations
        run: |
          uv run manage.py migrate
        working-directory: ./backend-django
        env:
          DJANGO_SETTINGS_MODULE: mysite.settings
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          DATABASE_NAME: ${{ secrets.MYSQL_DATABASE }}
          DATABASE_USER: ${{ secrets.MYSQL_USER }}
          DATABASE_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          DATABASE_HOST: mysql
          DATABASE_PORT: 3306

      - name: Start Django Backend Server in Background
        run: |
          uv run manage.py runserver 0.0.0.0:8000 &
        working-directory: ./backend-django
        env:
          DJANGO_SETTINGS_MODULE: mysite.settings
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          DEBUG: "False" # It's good practice to set DEBUG to False in CI
          DATABASE_NAME: ${{ secrets.MYSQL_DATABASE }}
          DATABASE_USER: ${{ secrets.MYSQL_USER }}
          DATABASE_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          DATABASE_HOST: mysql
          DATABASE_PORT: 3306

      # --- Newman (Node.js) Setup and Run ---

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install Newman and HTML Reporter
        run: |
          npm install -g newman
          npm install -g newman-reporter-htmlextra

      - name: Run Postman API Tests
        run: |
          newman run backend-django/postman_tests/Django_Polls_API.postman_collection.json \
            --reporters cli,htmlextra \
            --reporter-htmlextra-export newman-report.html

      - name: Upload Newman HTML Report
        uses: actions/upload-artifact@v4
        with:
          name: newman-html-report
          path: newman-report.html
          retention-days: 7

      - name: Stop Django Backend Server
        if: always()
        run: |
          pkill -f "python manage.py runserver 0.0.0.0:8000" || true
        working-directory: ./backend-django